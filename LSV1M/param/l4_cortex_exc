{
    #CorticalUniformSheet parameters
    'component': 'mozaik.sheets.vision.VisualCorticalUniformSheet',
    'params':{
        'name':'V1_Exc_L4',
        'sx':5000.0,
        'sy':ref('sheets.l4_cortex_exc.params.sx'),
        'density': 20000.0 * ref('density_frac'),
        'mpi_safe' : False,    
        'magnification_factor': 1000.0,
        'cell': {
            'model': 'EIF_cond_exp_isfa_ista',
            'native_nest': False,
            'params': {
                'v_rest': -80,
                'v_reset': -60.0,
                'tau_refrac': 2.0,
                'tau_m': 8.0,
                'cm': 0.032,
                'e_rev_E': 0.0,
                'e_rev_I': -80.0,
                'tau_syn_E': 1.5,
                'tau_syn_I': 4.2,
                'a' : -0.8,
                'b' : 0.08,
                'delta_T' : 0.8,
                'tau_w' : 1.0,
                'v_thresh' : -57.0                            
            },
            'initial_values': {
                'v': PyNNDistribution(name='uniform',low=-70,high=-51),
            },
        },
        'artificial_stimulators' : {},
        'recording_interval'  :  1.0,                                                            
        'recorders' : url("param/l4_exc_rec"),
    },

    'K' : 1000, # Number of incoming synapses onto a single neuron

    'l6a_aff_ratio' : 0.2,  
    'self_conns' : 1.0 - ref('sheets.l4_cortex_exc.l6a_aff_ratio'),


    'L4ExcL4ExcConnection': {
        'target_synapses' : 'excitatory',             
        'short_term_plasticity': {
            'U': 0.75, 
            'tau_rec': 30, 
            'tau_psc': 3.0,
            'tau_fac': 0.0,
        },

        'weight_functions' : {                          
            'f1' : {
                'component' : 'mozaik.connectors.vision.V1CorrelationBasedConnectivity',
                'params' : {
                    'sigma' : 1.3,
                    'target_synapses' : 'excitatory',  
                }
            }, 
            'f2' : {
                'component' : 'mozaik.connectors.modular_connector_functions.HyperbolicModularConnectorFunction',
                'params' : {
                    'theta': 207.76,
                    'alpha': 0.013944,
                }
            },                                        
        },
        'weight_expression' : 'f1*f2',
        'base_weight': 0.00018,
        
        'delay_functions' : {
            'd1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.LinearModularConnectorFunction',
                'params' : {
                    'constant_scaler': 1.4,
                    'linear_scaler': 0.0033333333,   
                }
            }, 
        },
        'delay_expression' : 'd1',
        
        'num_samples_functions' : {
            'n1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.ThresholdExponentialModularNumSamplesConnectorFunction',
                'params' : {
                    'threshold': 0.1,
                    'max_decrease': 2,
                    'exponent_factor': 3,
                }
            },
        },
        'num_samples_expression' : '',
        'num_samples' : ref('sheets.l4_cortex_exc.K') * 4.0/5.0 * ref('sheets.l4_cortex_exc.self_conns'),

        'local_module': None,
    	'annotation_reference_name' : 'aff_samples',
    },
    
    'L4ExcL4InhConnection': {
        'target_synapses' : 'excitatory',             
        'short_term_plasticity': ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.short_term_plasticity'),        
        
        'weight_functions' : {                          
            'f1' : {
                'component' : 'mozaik.connectors.vision.V1CorrelationBasedConnectivity',
                'params' : {
                    'sigma' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.weight_functions.f1.params.sigma'),
                    'target_synapses' : 'excitatory',  
                }
            }, 
            'f2' : {
                'component' : 'mozaik.connectors.modular_connector_functions.HyperbolicModularConnectorFunction',
                'params' : {
                    'theta': 191.84,
                    'alpha': 0.014827,
                }
            },                                        
        },
        'weight_expression' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.weight_expression'),
        'base_weight': 0.00022,
        
        'delay_functions' : {
            'd1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.LinearModularConnectorFunction',
                'params' : {
                    'constant_scaler': 0.5,
                    'linear_scaler': ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.delay_functions.d1.params.linear_scaler'),   
                }
            }, 
        },
        'delay_expression' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.delay_expression'),
        
        'num_samples_functions' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_functions'),
        'num_samples_expression' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_expression'),
        'num_samples' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples') * ref('sheets.l4_cortex_inh.inhibitory_connection_ratio'),

        'local_module': None,
    	'annotation_reference_name' : 'aff_samples',
    },

    'L4ExcL23ExcConnection': {
        'target_synapses' : 'excitatory',             
        'short_term_plasticity': {
            'U': 0.75,
            'tau_rec': 30,
            'tau_psc': 3.0,
            'tau_fac': 0.0,
        },

        'weight_functions' : {
            'f1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.HyperbolicModularConnectorFunction',
                'params' : {
                    'theta':  154.45,
	                'alpha': 0.017452,
                }
            },            
			'f2' : {
            'component' : 'mozaik.connectors.vision.MapDependentModularConnectorFunction',
                'params' : {
                    'sigma' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.weight_functions.f1.params.sigma'),
                    'map_location' : ref('sheets.l4_cortex_exc.AfferentConnection.or_map_location'),                                            
                    'map_stretch' : ref('sheets.l4_cortex_exc.AfferentConnection.or_map_stretch'),                                            
                    'periodic' : True,
                }
            }, 
        },
        'weight_expression' : 'f1*f2',
        'base_weight': 0.001,

        'delay_functions' : {
            'd1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.LinearModularConnectorFunction',
                'params' : {
                    'constant_scaler': ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.delay_functions.d1.params.constant_scaler'),
                    'linear_scaler': 0,
                }
            },
        },
        'delay_expression' : 'd1',

        'num_samples_functions' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_functions'),
        'num_samples_expression' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_expression'),
        'num_samples' : ref('sheets.l23_cortex_exc.K') * 4/5 * ref('sheets.l23_cortex_exc.l4_aff_ratio'),

        'local_module': None,
    },

   'L4ExcL23InhConnection': {
        'target_synapses' : 'excitatory',             
        'short_term_plasticity':  ref('sheets.l23_cortex_exc.L4ExcL23ExcConnection.short_term_plasticity'),

        'weight_functions' : {
            'f1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.HyperbolicModularConnectorFunction',
                'params' : {
                    'theta':  131.56,
                    'alpha': 0.019761,
                }
            },            
            'f2' : {
                'component' : 'mozaik.connectors.vision.MapDependentModularConnectorFunction',
                'params' : {
                    'sigma' : ref('sheets.l4_cortex_exc.L4ExcL4InhConnection.weight_functions.f1.params.sigma'),
                    'map_location' : ref('sheets.l4_cortex_exc.AfferentConnection.or_map_location'),                                            
                    'map_stretch' : ref('sheets.l4_cortex_exc.AfferentConnection.or_map_stretch'),                                            
                    'periodic' : True,
                }
            }, 
        },
        'weight_expression' : 'f1*f2',
        'base_weight': ref('sheets.l23_cortex_exc.L4ExcL23ExcConnection.base_weight'),

        'delay_functions' : {
            'd1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.LinearModularConnectorFunction',
                'params' : {
                    'constant_scaler': ref('sheets.l4_cortex_exc.L4ExcL4InhConnection.delay_functions.d1.params.constant_scaler'),
                    'linear_scaler': 0,
                }
            },
        },
        'delay_expression' : 'd1',

        'num_samples_functions' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_functions'),
        'num_samples_expression' : ref('sheets.l4_cortex_exc.L4ExcL4ExcConnection.num_samples_expression'),
        'num_samples' : ref('sheets.l23_cortex_exc.L4ExcL23ExcConnection.num_samples')* ref('sheets.l4_cortex_exc.inhibitory_connection_ratio'),

        'local_module': None,
    },

    'AfferentMean' : 70,      
    'AfferentVar' : 25,

    'AfferentConnection': {
        'aspect_ratio':            0.4,
        'size':                    0.17,
        'orientation_preference':  PyNNDistribution(name='uniform',low=0,high=3.141592653589793),
        'phase':                   PyNNDistribution(name='uniform',low=0,high=6.283185307179586),
        'frequency':               0.8,

        'delay_expression': 'd1',    
        'delay_functions' : {
            'd1' : {
                'component' : 'mozaik.connectors.modular_connector_functions.PyNNDistributionConnectorFunction',
                'params' : {
                    'pynn_distribution': PyNNDistribution(name='uniform',low=1.4,high=2.4)
                }
            }
        },
        'num_samples_functions' : None,
        'num_samples_expression' : '',
        'topological' : True,
	    
        'or_map' : True,
        'or_map_location' : './or_map_new_16x16',
        'or_map_stretch' : 3.35,
        'phase_map' : False,
        'phase_map_location' : './phase_map',
        'rf_jitter' : 0,
        'off_bias' : 1.0,
        'gauss_coefficient' : 0.085,

        'base_weight' : 0.0012,
        'num_samples' : {
            'class_name': 'PyNNDistribution',
            'params': {
                'name': 'uniform',
                'low': ref('sheets.l4_cortex_exc.AfferentMean') - ref('sheets.l4_cortex_exc.AfferentVar'),
                'high': ref('sheets.l4_cortex_exc.AfferentMean') + ref('sheets.l4_cortex_exc.AfferentVar'),
            },
         },
        'short_term_plasticity': {
            'U': 0.75, 
            'tau_rec': 125.0, 
            'tau_psc': 3.0,
            'tau_fac': 0.0,
        },


        'local_module': None,
    }
}        
